# This workflow will build a Java project with Maven and upload code coverage to SonarCloud
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven and SonarCloud Coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: Ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Maven
        run: mvn clean package

      # SONARCLOUD
      - name: Cache SonarCloud packages (Optional)
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages (Optional)
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with code coverage
        env:
          # ...
          SONAR_PROJECT_KEY: your_project_key
        run: |
          cd gang-of-four  # Update path if needed
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco.xml  # Update path if needed
             || echo "SonarCloud analysis failed!" && steps.fail(message: 'SonarCloud analysis failed')
